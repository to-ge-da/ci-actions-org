name: Migrate GitLab repository
run-name: Migrate repository from GitLab to GitHub by ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      run-migrate:
        description: Migrate repository
        required: true
        type: boolean
      gitlab-project-id:
        description: |
          GitLab project ID
        required: false
        type: string

env:
  GITHUB_AUTH_TOKEN: ${{ secrets.GH_TOKEN_WORKFLOW }}
  GITLAB_AUTH_TOKEN: ${{ secrets.GL_AUTH_TOKEN }}

jobs:
  gitlab-fetch-data:
    name: Fetch data from GitLab repository
    runs-on: ubuntu-latest
    env:
      GITLAB_API_URL: "https://gitlab.com/api/v4/projects"
      GITLAB_PROJECT_ID: ${{ inputs.gitlab-project-id }}
    outputs:
      GITLAB_REPOSITORY_NAME: ${{ steps.gitlab-fetch-data.outputs.REPO_NAME }}
      GITLAB_REPOSITORY_CLONE_URL: ${{ steps.gitlab-fetch-data.outputs.CLONE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup arkade
        uses: alexellis/arkade-get@master
        with:
          jq: latest

      - name: Fetch information from the GitLab repository
        id: gitlab-fetch-data
        run: |
          echo "REPO_NAME=$(curl -H "PRIVATE-TOKEN: ${{ env.TOKEN }}" -s "${{ env.REPO_URL }}" | jq -r '.name')" >> $GITHUB_OUTPUT
          echo "CLONE_URL=$(curl -H "PRIVATE-TOKEN: ${{ env.TOKEN }}" -s "${{ env.REPO_URL }}" | jq -r '.http_url_to_repo')" >> $GITHUB_OUTPUT
        shell: bash
        env:
          TOKEN: ${{ env.GITLAB_AUTH_TOKEN }}
          REPO_URL: ${{ env.GITLAB_API_URL }}/${{ env.GITLAB_PROJECT_ID }}

      - name: Debug GitLab repository name
        run: |
          echo "GitLab repository name: ${{ steps.gitlab-fetch-data.outputs.REPO_NAME }}"
          echo "GitLab repository clone url: ${{ steps.gitlab-fetch-data.outputs.CLONE_URL }}"

      - name: Clone GitLab repository
        id: gitlab-clone-repo
        run: |
          git clone --bare ${{ env.SOURCE_REPO_URL }} -q
          echo "BARE_REPO_DIR=$(echo "${{ env.SOURCE_REPO_URL }}" | grep -oE '(/[^/]+){1}$' | cut -d "/" -f 2)" >> $GITHUB_OUTPUT
        env:
          SOURCE_REPO_URL: ${{ steps.gitlab-fetch-data.outputs.CLONE_URL }}

      - name: Debug bare repository
        run: |
          echo "${{ env.BARE_DIR }}"
          cd "${{ env.BARE_DIR }}" || exit
          ls -lthr
        env:
          BARE_DIR: ${{ steps.gitlab-clone-repo.outputs.BARE_REPO_DIR }}

  github-create-repo:
    name: Create target GitHub repository
    runs-on: ubuntu-latest
    needs: gitlab-fetch-data
    env:
      GITHUB_ORG_NAME: to-ge-da
      GITHUB_REPOSITORY_NAME: ${{ needs.gitlab-fetch-data.outputs.GITLAB_REPOSITORY_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: lbrealdev/github-rest-api

      - name: Setup rye
        uses: eifinger/setup-rye@v1

      - name: Rye sync
        run: rye sync --no-lock

      - name: Enable Python virtualenv
        run: source .venv/bin/activate

      - name: Create target repository in GitHub Org
        run: |
          github-rest-api create-repo -n ${{ env.GITHUB_REPOSITORY_NAME }} -o ${{ env.GITHUB_ORG_NAME }} -p true

  migration-repository:
    name: Migrate repository from GitLab to GitHub
    runs-on: ubuntu-latest
    needs: 
      - gitlab-fetch-data
      - github-create-repo
    env:
      GITLAB_SOURCE_REPOSITORY: ${{ needs.gitlab-fetch-data.outputs.GITLAB_REPOSITORY_CLONE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug this Job
        run: |
          echo "${{ env.GITLAB_SOURCE_REPOSITORY }}"
          ls -lthr
