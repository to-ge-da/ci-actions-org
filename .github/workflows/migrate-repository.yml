name: Migrate GitLab repository
run-name: Migrate repository from GitLab to GitHub by ${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      run-migrate:
        description: Migrate repository
        required: true
        type: boolean
      gitlab-project-id:
        description: |
          GitLab project ID
        required: false
        type: string

env:
  GITHUB_AUTH_TOKEN: ${{ secrets.GH_TOKEN_WORKFLOW }}
  GITLAB_AUTH_TOKEN: ${{ secrets.GL_AUTH_TOKEN }}

jobs:
  gitlab-fetch-data:
    name: Fetch data from GitLab repository
    runs-on: ubuntu-latest
    env:
      GITLAB_API_URL: "https://gitlab.com/api/v4/projects"
      GITLAB_PROJECT_ID: ${{ inputs.gitlab-project-id }}
    outputs:
      GITLAB_REPOSITORY_NAME: ${{ steps.gitlab-fetch-data.outputs.REPO_NAME }}
      GITLAB_REPOSITORY_CLONE_URL: ${{ steps.gitlab-fetch-data.outputs.CLONE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup arkade
        uses: alexellis/arkade-get@master
        with:
          jq: latest

      - name: Fetch information from the GitLab repository
        id: gitlab-fetch-data
        run: |
          echo "REPO_NAME=$(curl -H "PRIVATE-TOKEN: ${{ env.TOKEN }}" -s "${{ env.REPO_URL }}" | jq -r '.name')" >> $GITHUB_OUTPUT
          echo "CLONE_URL=$(curl -H "PRIVATE-TOKEN: ${{ env.TOKEN }}" -s "${{ env.REPO_URL }}" | jq -r '.http_url_to_repo')" >> $GITHUB_OUTPUT
        shell: bash
        env:
          TOKEN: ${{ env.GITLAB_AUTH_TOKEN }}
          REPO_URL: ${{ env.GITLAB_API_URL }}/${{ env.GITLAB_PROJECT_ID }}

      - name: Debug GitLab repository name
        run: |
          echo "GitLab repository name: ${{ steps.gitlab-fetch-data.outputs.REPO_NAME }}"
          echo "GitLab repository clone url: ${{ steps.gitlab-fetch-data.outputs.CLONE_URL }}"

  github-create-repo:
    name: Create target GitHub repository
    runs-on: ubuntu-latest
    needs: gitlab-fetch-data
    env:
      GITHUB_ORG_NAME: to-ge-da
      GITHUB_REPOSITORY_NAME: ${{ needs.gitlab-fetch-data.outputs.GITLAB_REPOSITORY_NAME }}
    outputs:
      GITHUB_FULL_NAME: ${{ env.GITHUB_ORG_NAME }}/${{ env.GITHUB_REPOSITORY_NAME }}

    steps:
      - name: Checkout github-rest-api repository
        uses: actions/checkout@v4
        with:
          repository: lbrealdev/github-rest-api

      - name: Setup rye
        uses: eifinger/setup-rye@v1

      - name: Rye sync
        run: rye sync --no-lock

      - name: Create target repository in GitHub Org
        run: |
          source .venv/bin/activate
          github-rest-api create-repo -n ${{ env.GITHUB_REPOSITORY_NAME }} -o ${{ env.GITHUB_ORG_NAME }} -p true

  migration-repository:
    name: Migrate repository from GitLab to GitHub
    runs-on: ubuntu-latest
    needs: 
      - gitlab-fetch-data
      - github-create-repo
    env:
      GITLAB_SOURCE_REPOSITORY: ${{ needs.gitlab-fetch-data.outputs.GITLAB_REPOSITORY_CLONE_URL }}
      GITHUB_TARGET_REPOSITORY: ${{ needs.github-create-repo.outputs.GITHUB_FULL_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout GitHub target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITHUB_TARGET_REPOSITORY }}
          token: ${{ env.GITHUB_AUTH_TOKEN }}
          path: target

      - name: GitLab - Clone source repository
        id: gitlab-clone-repo
        run: |
          git clone --bare ${{ env.GITLAB_SOURCE_REPOSITORY }} -q
          echo "BARE_REPO_DIR=$(echo "${{ env.GITLAB_SOURCE_REPOSITORY }}" | grep -oE '(/[^/]+){1}$' | cut -d "/" -f 2)" >> $GITHUB_OUTPUT

      - name: GitHub - Push repository mirror
        run: |
          TARGET_AUTH_URL=${TARGET_URL/https:\/\//https:\/\/"${{ env.GITHUB_AUTH_TOKEN }}"@}
          echo "$TARGET_AUTH_URL"
          #git push --mirror ${{ env.TARGET_URL }}
        env:
          TARGET_URL: https://github.com/${{ env.GITHUB_TARGET_REPOSITORY }}.git
        working-directory: ${{ steps.gitlab-clone-repo.outputs.BARE_REPO_DIR }}

      - name: GitHub - Set up branch in target repository
        run: |
          ls -lthr
          #git pull -q
          #git checkout master -q
          #git push origin master:main --force-with-lease
          #git branch -f main origin/main -q
          #git push -d origin master -q
          #git checkout main -q
        working-directory: target
